# -*- coding: utf-8 -*-
"""
Редактор Spyder

Это временный скриптовый файл.
"""
import numpy as np
a = np.array([0, 1, 2], dtype = np.uint8) - 10
print(a)

print(type(a))

print(a.shape)

t = (1, 2, 3, [4, 5, 6])
print(len(t))
print(t[1])

a = np.array([[1, 2, 3], [4, 5, 6]])
print(a)
print(a.shape)
print(a.size)
assert np.prod(a.shape) == a.size
print(a.ndim)
assert a.ndim == len(a.shape)
assert a.shape[0] == len(a)
a = np.arange(10)
a = np.arange(0, 7/3, 1/3)
a = np.linspace(0.0, 2.0, 7, endpoint = False)
a = np.arange(8)
b = a.reshape(4, 2)
print(a)
print(b)
b[0, 0] = -100
print(a)
c = a
c[-1] = 500
print(a)
assert a is c

a = np.arange(8).reshape(4,2)
print(a)

a.resize(2,4)
print(a)
a.shape = (8, )
print(a)
a = np.ones((2,1), dtype = str)
print(a)
a= np.full((3,2), 'a')
print(a)
a = np.empty((3,2))
print(a)
b = np.zeros_like(a, dtype = int)
print(b)
x = np.zeros(3)
y = np.full_like(x, np.pi)
a = np.empty([2,3], dtype = complex)
a = np.arange(8)
print(a[-1])
print(a[:-1])
print(a[2:5])
print(a[::-1])

b = a[2:6]
b[0] = -100
print(a)

b = a.copy()
b = np.empty_like(a)
b[:] = a
b = a
a = np.arange(16).reshape(4,4)
print(a)
print(a[::2])
print(a[:,0])
print(a.reshape(8, -1))
print(a.reshape(8,2))
print(a.reshape(-1,2))

print(a.reshape(4,4,1))

print(a[:,:, np.newaxis])
print(a[:,:, None])
print(a[..., np.newaxis])

b = a[:,:, np.newaxis]
print(b[:,:,0])
print(b[...,0])

a = [0,1,2, [3,4,5]]
b = a.copy()
assert a is not b
b[-1][-1] *= -100
print(a)

import copy 
b = copy.deepcopy(a)
assert a[-1] is not b[-1]

a = [1,2,3]
a.append(a)
print(a)
b = a.copy()
print(b)
c = copy.deepcopy(a)
print(c)

a = np.zeros(15).reshape(5,3)
print(a)
x = np.ones(3)
print(x)
print(a + x)
y = np.arange(5)
print(a + y.reshape(-1, 1))
print(a + y[:, np.newaxis])

a = np.arange(9).reshape(3,3)
a += 1
a **= 2
print(a)
print(np.sum(a))
print(np.sum(a, axis = 0))
print(np.sum(a, axis = 1))
print(np.min(a))
print(np.max(a))
print(np.argmin(a))
print(np.mean(a))
print(np.median(a))
print(np.std(a))

a = np.array([3, 0, -5, 7, 2])

a.sort()
print(a)
i = a.searchsorted(np.pi)
print(sorted([-5, 1, 0, 3], key = abs))
print(a[:i], np.pi, a[i:])

#новый семинар




















 
