import math

k = 0.1
x_left = 0
x_right = 1.0 / k
eps = 1E-10

def f(x, k):
    return abs(math.sin(x)) - k*x

def bisection (a, b, eps):
    c = (a + b)/2
    if f(a, k)*f(b, k) < 0:
        while abs(b-a) >= 2*eps:
            if f(a,k)*f(c,k) < 0:
                b=c
            else:
                a=c
    return c

interval = []
b = int(x_right)

if k == 0:
    print(0)
elif k > 0:
    for i in range (b):
        s = i*(math.pi)/2
        if s < x_right:
            interval.append(s)
    interval.sort()
print(0) #так как 0 всегда является корнем данного уравнения
for i in range (len(interval)-1):
    solutions = [bisection(interval[i], interval[i+1], eps)]  
